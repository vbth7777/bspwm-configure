#  ███████╗██╗  ██╗██╗  ██╗██╗  ██╗██████╗ ██████╗  ██████╗
#  ██╔════╝╚██╗██╔╝██║  ██║██║ ██╔╝██╔══██╗██╔══██╗██╔════╝
#  ███████╗ ╚███╔╝ ███████║█████╔╝ ██║  ██║██████╔╝██║     
#  ╚════██║ ██╔██╗ ██╔══██║██╔═██╗ ██║  ██║██╔══██╗██║     
#  ███████║██╔╝ ██╗██║  ██║██║  ██╗██████╔╝██║  ██║╚██████╗
#  ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝ ╚═╝  ╚═╝ ╚═════╝
#	z0mbi3			https://github.com/gh0stzk/dotfiles
#

#|||----- Applications -----|||#

# Open Terminal (alacritty)
super + Return
	OpenApps --terminal

# Open floating Terminal
# super + alt + Return
# 	OpenApps --floating

# Menu aplicaciones
# super + t
# 	OpenApps --menu

#####

# Apps (browser, editor, filemanager)
shift + alt + {b,g,n}
	OpenApps {--browser,--editor,--filemanager}

# Terminal apps (ranger, nvim, ncmpcpp)
shift + alt + {r,v,k}
	OpenApps {--ranger,--nvim,--music}


#|||----- System Keybindings -----|||#

# Show keybindings help
alt + F1
	KeybindingsHelp

# Theme Selector
super + shift + alt + t
	RiceSelector

# jgmenu
~button3
  xqp 0 $(xdo id -N Bspwm -n root) && jgmenu --csv-file=~/.config/bspwm/scripts/menu.txt --config-file=~/.config/bspwm/jgmenurc

# Scratchpad
# super + alt + o
# 	tdrop -a -w 70% -h 35% -y 0 -x 15%  --class scratch alacritty --class=scratch

# Power off, Reboot, Log out, Lockscreen, kill an app
# ctrl + super + alt + {p,r,q,l,k}
# 	{systemctl poweroff, systemctl reboot,bspc quit,physlock -d,xkill}

# Hide/Show Bar (Polybar and/or eww)
# super + {y,u}
# 	HideBar {-h,-u}

# Change transparency on focused window
# ctrl + alt + {plus,minus,t}
# 	picom-trans {-c -o +3,-c -o -1,-c -d}

# Random wallpaper
# super + alt + w
# 	feh -z --no-fehbg --bg-fill ~/.config/bspwm/rices/$RICETHEME/walls/

# Screenshot Now
super + Print
	ScreenShoTer --now

# Screenshot Select
ctrl + Print
	ScreenShoTer --sel

# Screenshot in 10s
alt + Print
	ScreenShoTer --in10

# Screenshot active window
shift + Print
	ScreenShoTer --active

# Manage brightness
XF86MonBrightness{Up,Down}
    sh Brightness {up,down}

# Volume control
XF86Audio{RaiseVolume,LowerVolume,Mute}
	Volume{ --inc, --dec, --toggle}

# Music Control
XF86Audio{Next,Prev,Play,Stop}
	MediaControl {--next,--previous,--toggle,--stop}


#|||----- Bspwm hotkeys -----|||#

#
# general hotkeys
#

# open clipboard manage by rofi
super + v
	rofi -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}';xdotool key shift+Insert

# backlight up
super + alt + u
	xbacklight -inc 10
# backlight down
super + alt + y
	xbacklight -dec 10
# volume up
super + alt + p
	amixer set Master 10%+
# volume down
super + alt + i
	amixer set Master 10%-
# volume mute/unmute
super + alt + o
	amixer set Master toggle

#
# wm independent hotkeys
#

# show rofi drun
ctrl + space
	rofi -show drun
# show rofi run
alt + space
	rofi -show run
# show rofi run
super + alt + space
	rofi -show window

#archlinux-logout
super + x
    archlinux-logout

# terminal emulator
super + Return
	alacritty

# program launcher
#super + @space
#	dmenu_run

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

#
# polybar hotkeys
#

# hide polybar
super + y
	polybar-msg cmd toggle 

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}
# fullscreen
super + n
	 bspc node -t ~fullscreen

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

#Focus selected desktop
# alt + Tab
# 	bspc desktop -f '^{1-9,10}'
#
# #Focus selected desktop
# alt + shift + Tab
# 	bspc desktop -f '^{1-9,10}'

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# Expand tiled space
alt + shift + {h,j,k,l}
	bspc node {@west -r -10,@south -r +10,@north -r -10,@east -r +10}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}
# Move floating window
super + alt + {_,shift + }{Left,Down,Up,Right}
	~/.config/bspwm/scripts/move-window {_,edge-}{west,south,north,east}


